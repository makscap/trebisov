{"ast":null,"code":"import \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\n/*\n  Stepper\n\n  This allows a collection of sections to be collapsed by default,\n  showing only their headers. Sections can be exanded or collapsed\n  individually by clicking their headers. An \"Zobraziť všetko\" button is\n  also added to the top of the accordion, which switches to \"Zatvoriť všetko\"\n  when all the sections are expanded.\n\n  The state of each section is saved to the DOM via the `aria-expanded`\n  attribute, which also provides accessibility.\n\n*/\n\nimport { nodeListForEach, toggleClass } from '../../common';\nimport '../../../govuk/vendor/polyfills/Function/prototype/bind';\nimport '../../../govuk/vendor/polyfills/Element/prototype/classList';\nfunction Stepper($module) {\n  this.$module = $module;\n  this.$moduleId = $module.getAttribute('id');\n  this.$sections = $module.querySelectorAll('.idsk-stepper__section');\n  this.$links = $module.querySelectorAll('.idsk-stepper__section-content .govuk-link');\n  this.$openAllButton = '';\n  this.$browserSupportsSessionStorage = $helper.checkForSessionStorage();\n  this.$controlsClass = 'idsk-stepper__controls';\n  this.$openAllClass = 'idsk-stepper__open-all';\n  this.$iconClass = 'idsk-stepper__icon';\n  this.$sectionHeaderClass = 'idsk-stepper__section-header';\n  this.$sectionHeaderFocusedClass = 'idsk-stepper__section-header--focused';\n  this.$sectionHeadingClass = 'idsk-stepper__section-heading';\n  this.$sectionSummaryClass = 'idsk-stepper__section-summary';\n  this.$sectionButtonClass = 'idsk-stepper__section-button';\n  this.$sectionExpandedClass = 'idsk-stepper__section--expanded';\n}\n\n// Initialize component\nStepper.prototype.init = function () {\n  // Check for module\n  if (!this.$module) {\n    return;\n  }\n  this.initControls();\n  this.initSectionHeaders();\n  nodeListForEach(this.$links, function ($link) {\n    $link.addEventListener('click', this.handleItemLink.bind(this));\n    $link.addEventListener('blur', this.handleItemLinkBlur.bind(this));\n  }.bind(this));\n\n  // See if \"Zobraziť všetko\" button text should be updated\n  var $areAllSectionsOpen = this.checkIfAllSectionsOpen();\n  this.updateOpenAllButton($areAllSectionsOpen);\n};\n\n// Initialise controls and set attributes\nStepper.prototype.initControls = function () {\n  var $accordionControls = this.$module.querySelector('.idsk-stepper__controls');\n  // Create \"Zobraziť všetko\" button and set attributes\n  this.$openAllButton = document.createElement('button');\n  this.$openAllButton.setAttribute('type', 'button');\n  this.$openAllButton.innerHTML = $accordionControls.dataset.line1 + ' <span class=\"govuk-visually-hidden\">sections</span>';\n  this.$openAllButton.setAttribute('class', this.$openAllClass);\n  this.$openAllButton.setAttribute('aria-expanded', 'false');\n  this.$openAllButton.setAttribute('type', 'button');\n\n  // Create control wrapper and add controls to it\n  $accordionControls.appendChild(this.$openAllButton);\n\n  // Handle events for the controls\n  this.$openAllButton.addEventListener('click', this.onOpenOrCloseAllToggle.bind(this));\n};\n\n// Initialise section headers\nStepper.prototype.initSectionHeaders = function () {\n  // Loop through section headers\n  nodeListForEach(this.$sections, function ($section, $i) {\n    // Set header attributes\n    var $header = $section.querySelector('.' + this.$sectionHeaderClass);\n    this.initHeaderAttributes($header, $i);\n    this.setExpanded(this.isExpanded($section), $section);\n\n    // Handle events\n    $header.addEventListener('click', this.onSectionToggle.bind(this, $section));\n\n    // See if there is any state stored in sessionStorage and set the sections to\n    // open or closed.\n    this.setInitialState($section);\n  }.bind(this));\n};\nStepper.prototype.handleItemLink = function (e) {\n  var $link = e.target || e.srcElement;\n  var $currentSection = $link.closest('.idsk-stepper__section');\n  $currentSection.classList.add('idsk-stepper__bolder-line');\n};\nStepper.prototype.handleItemLinkBlur = function (e) {\n  var $link = e.target || e.srcElement;\n  var $currentSection = $link.closest('.idsk-stepper__section');\n  $currentSection.classList.remove('idsk-stepper__bolder-line');\n};\n\n// Set individual header attributes\nStepper.prototype.initHeaderAttributes = function ($headerWrapper, index) {\n  var $module = this.$module;\n  var $span = $headerWrapper.querySelector('.' + this.$sectionButtonClass);\n  var $heading = $headerWrapper.querySelector('.' + this.$sectionHeadingClass);\n  var $summary = $headerWrapper.querySelector('.' + this.$sectionSummaryClass);\n  if (!$span) {\n    return;\n  }\n\n  // Copy existing span element to an actual button element, for improved accessibility.\n  var $button = document.createElement('button');\n  $button.setAttribute('type', 'button');\n  $button.setAttribute('id', this.$moduleId + '-heading-' + (index + 1));\n  $button.setAttribute('aria-controls', this.$moduleId + '-content-' + (index + 1));\n\n  // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n  for (var i = 0; i < $span.attributes.length; i++) {\n    var $attr = $span.attributes.item(i);\n    $button.setAttribute($attr.nodeName, $attr.nodeValue);\n  }\n  $button.addEventListener('focusin', function (e) {\n    if (!$headerWrapper.classList.contains($module.$sectionHeaderFocusedClass)) {\n      $headerWrapper.className += ' ' + $module.$sectionHeaderFocusedClass;\n    }\n  });\n  $button.addEventListener('blur', function (e) {\n    $headerWrapper.classList.remove($module.$sectionHeaderFocusedClass);\n  });\n  if (typeof $summary !== 'undefined' && $summary !== null) {\n    $button.setAttribute('aria-describedby', this.$moduleId + '-summary-' + (index + 1));\n  }\n\n  // $span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n  $button.innerHTML = $span.innerHTML;\n  $heading.removeChild($span);\n  $heading.appendChild($button);\n\n  // Add \"+/-\" icon\n  var $icon = document.createElement('span');\n  $icon.className = this.$iconClass;\n  $icon.setAttribute('aria-hidden', 'true');\n  $heading.appendChild($icon);\n};\n\n// When section toggled, set and store state\nStepper.prototype.onSectionToggle = function ($section) {\n  var $expanded = this.isExpanded($section);\n  this.setExpanded(!$expanded, $section);\n\n  // Store the state in sessionStorage when a change is triggered\n  this.storeState($section);\n};\n\n// When Open/Zatvoriť všetko toggled, set and store state\nStepper.prototype.onOpenOrCloseAllToggle = function () {\n  var $self = this;\n  var $sections = this.$sections;\n  var $nowExpanded = !this.checkIfAllSectionsOpen();\n  nodeListForEach($sections, function ($section) {\n    $self.setExpanded($nowExpanded, $section);\n    // Store the state in sessionStorage when a change is triggered\n    $self.storeState($section);\n  });\n  $self.updateOpenAllButton($nowExpanded);\n};\n\n// Set section attributes when opened/closed\nStepper.prototype.setExpanded = function ($expanded, $section) {\n  var $button = $section.querySelector('.' + this.$sectionButtonClass);\n  if (!$button) {\n    return;\n  }\n  $button.setAttribute('aria-expanded', $expanded);\n  if ($expanded) {\n    $section.classList.add(this.$sectionExpandedClass);\n  } else {\n    $section.classList.remove(this.$sectionExpandedClass);\n  }\n\n  // See if \"Zobraziť všetko\" button text should be updated\n  var $areAllSectionsOpen = this.checkIfAllSectionsOpen();\n  this.updateOpenAllButton($areAllSectionsOpen);\n};\n\n// Get state of section\nStepper.prototype.isExpanded = function ($section) {\n  return $section.classList.contains(this.$sectionExpandedClass);\n};\n\n// Check if all sections are open\nStepper.prototype.checkIfAllSectionsOpen = function () {\n  // Get a count of all the Accordion sections\n  var $sectionsCount = this.$sections.length;\n  // Get a count of all Accordion sections that are expanded\n  var $expandedSectionCount = this.$module.querySelectorAll('.' + this.$sectionExpandedClass).length;\n  var $areAllSectionsOpen = $sectionsCount === $expandedSectionCount;\n  return $areAllSectionsOpen;\n};\n\n// Update \"Zobraziť všetko\" button\nStepper.prototype.updateOpenAllButton = function ($expanded) {\n  var $accordionControls = this.$module.querySelector('.idsk-stepper__controls');\n  var $newButtonText = $expanded ? $accordionControls.dataset.line2 : $accordionControls.dataset.line1;\n  $newButtonText += '<span class=\"govuk-visually-hidden\"> sections</span>';\n  this.$openAllButton.setAttribute('aria-expanded', $expanded);\n  this.$openAllButton.innerHTML = $newButtonText;\n};\n\n// Check for `window.sessionStorage`, and that it actually works.\nvar $helper = {\n  checkForSessionStorage: function checkForSessionStorage() {\n    var $testString = 'this is the test string';\n    var $result;\n    try {\n      window.sessionStorage.setItem($testString, $testString);\n      $result = window.sessionStorage.getItem($testString) === $testString.toString();\n      window.sessionStorage.removeItem($testString);\n      return $result;\n    } catch (exception) {\n      if (typeof console === 'undefined' || typeof console.log === 'undefined') {\n        console.log('Notice: sessionStorage not available.');\n      }\n    }\n  }\n};\n\n// Set the state of the accordions in sessionStorage\nStepper.prototype.storeState = function ($section) {\n  if (this.$browserSupportsSessionStorage) {\n    // We need a unique way of identifying each content in the accordion. Since\n    // an `#id` should be unique and an `id` is required for `aria-` attributes\n    // `id` can be safely used.\n    var $button = $section.querySelector('.' + this.$sectionButtonClass);\n    if ($button) {\n      var $contentId = $button.getAttribute('aria-controls');\n      var $contentState = $button.getAttribute('aria-expanded');\n      if (typeof $contentId === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n        console.error(new Error('No aria controls present in accordion section heading.'));\n      }\n      if (typeof $contentState === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n        console.error(new Error('No aria expanded present in accordion section heading.'));\n      }\n\n      // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n      if ($contentId && $contentState) {\n        window.sessionStorage.setItem($contentId, $contentState);\n      }\n    }\n  }\n};\n\n// Read the state of the accordions from sessionStorage\nStepper.prototype.setInitialState = function ($section) {\n  if (this.$browserSupportsSessionStorage) {\n    var $button = $section.querySelector('.' + this.$sectionButtonClass);\n    if ($button) {\n      var $contentId = $button.getAttribute('aria-controls');\n      var $contentState = $contentId ? window.sessionStorage.getItem($contentId) : null;\n      if ($contentState !== null) {\n        this.setExpanded($contentState === 'true', $section);\n      }\n    }\n  }\n};\nexport default Stepper;","map":{"version":3,"names":["nodeListForEach","toggleClass","Stepper","$module","$moduleId","getAttribute","$sections","querySelectorAll","$links","$openAllButton","$browserSupportsSessionStorage","$helper","checkForSessionStorage","$controlsClass","$openAllClass","$iconClass","$sectionHeaderClass","$sectionHeaderFocusedClass","$sectionHeadingClass","$sectionSummaryClass","$sectionButtonClass","$sectionExpandedClass","prototype","init","initControls","initSectionHeaders","$link","addEventListener","handleItemLink","bind","handleItemLinkBlur","$areAllSectionsOpen","checkIfAllSectionsOpen","updateOpenAllButton","$accordionControls","querySelector","document","createElement","setAttribute","innerHTML","dataset","line1","appendChild","onOpenOrCloseAllToggle","$section","$i","$header","initHeaderAttributes","setExpanded","isExpanded","onSectionToggle","setInitialState","e","target","srcElement","$currentSection","closest","classList","add","remove","$headerWrapper","index","$span","$heading","$summary","$button","i","attributes","length","$attr","item","nodeName","nodeValue","contains","className","removeChild","$icon","$expanded","storeState","$self","$nowExpanded","$sectionsCount","$expandedSectionCount","$newButtonText","line2","$testString","$result","window","sessionStorage","setItem","getItem","toString","removeItem","exception","console","log","$contentId","$contentState","error","Error"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/idsk/components/stepper/stepper.js"],"sourcesContent":["\n/*\n  Stepper\n\n  This allows a collection of sections to be collapsed by default,\n  showing only their headers. Sections can be exanded or collapsed\n  individually by clicking their headers. An \"Zobraziť všetko\" button is\n  also added to the top of the accordion, which switches to \"Zatvoriť všetko\"\n  when all the sections are expanded.\n\n  The state of each section is saved to the DOM via the `aria-expanded`\n  attribute, which also provides accessibility.\n\n*/\n\nimport { nodeListForEach, toggleClass } from '../../common'\nimport '../../../govuk/vendor/polyfills/Function/prototype/bind'\nimport '../../../govuk/vendor/polyfills/Element/prototype/classList'\n\nfunction Stepper($module) {\n  this.$module = $module\n  this.$moduleId = $module.getAttribute('id')\n  this.$sections = $module.querySelectorAll('.idsk-stepper__section')\n  this.$links = $module.querySelectorAll('.idsk-stepper__section-content .govuk-link')\n  this.$openAllButton = ''\n  this.$browserSupportsSessionStorage = $helper.checkForSessionStorage()\n\n  this.$controlsClass = 'idsk-stepper__controls'\n  this.$openAllClass = 'idsk-stepper__open-all'\n  this.$iconClass = 'idsk-stepper__icon'\n\n  this.$sectionHeaderClass = 'idsk-stepper__section-header'\n  this.$sectionHeaderFocusedClass = 'idsk-stepper__section-header--focused'\n  this.$sectionHeadingClass = 'idsk-stepper__section-heading'\n  this.$sectionSummaryClass = 'idsk-stepper__section-summary'\n  this.$sectionButtonClass = 'idsk-stepper__section-button'\n  this.$sectionExpandedClass = 'idsk-stepper__section--expanded'\n}\n\n// Initialize component\nStepper.prototype.init = function () {\n  // Check for module\n  if (!this.$module) {\n    return\n  }\n\n  this.initControls()\n  this.initSectionHeaders()\n\n  nodeListForEach(\n    this.$links,\n    function ($link) {\n      $link.addEventListener('click', this.handleItemLink.bind(this));\n      $link.addEventListener('blur', this.handleItemLinkBlur.bind(this));\n    }.bind(this)\n  );\n\n  // See if \"Zobraziť všetko\" button text should be updated\n  var $areAllSectionsOpen = this.checkIfAllSectionsOpen()\n  this.updateOpenAllButton($areAllSectionsOpen)\n}\n\n// Initialise controls and set attributes\nStepper.prototype.initControls = function () {\n  var $accordionControls = this.$module.querySelector('.idsk-stepper__controls');\n  // Create \"Zobraziť všetko\" button and set attributes\n  this.$openAllButton = document.createElement('button')\n  this.$openAllButton.setAttribute('type', 'button')\n  this.$openAllButton.innerHTML = $accordionControls.dataset.line1 +' <span class=\"govuk-visually-hidden\">sections</span>'\n  this.$openAllButton.setAttribute('class', this.$openAllClass)\n  this.$openAllButton.setAttribute('aria-expanded', 'false')\n  this.$openAllButton.setAttribute('type', 'button')\n\n  // Create control wrapper and add controls to it\n  $accordionControls.appendChild(this.$openAllButton)\n   \n  // Handle events for the controls\n  this.$openAllButton.addEventListener('click', this.onOpenOrCloseAllToggle.bind(this))\n}\n\n// Initialise section headers\nStepper.prototype.initSectionHeaders = function () {\n  // Loop through section headers\n  nodeListForEach(this.$sections, function ($section, $i) {\n    // Set header attributes\n    var $header = $section.querySelector('.' + this.$sectionHeaderClass)\n    this.initHeaderAttributes($header, $i)\n\n    this.setExpanded(this.isExpanded($section), $section)\n\n    // Handle events\n    $header.addEventListener('click', this.onSectionToggle.bind(this, $section))\n\n    // See if there is any state stored in sessionStorage and set the sections to\n    // open or closed.\n    this.setInitialState($section)\n  }.bind(this))\n}\n\nStepper.prototype.handleItemLink = function (e) {\n  var $link = e.target || e.srcElement;\n  var $currentSection = $link.closest('.idsk-stepper__section');\n  $currentSection.classList.add('idsk-stepper__bolder-line')\n}\n\nStepper.prototype.handleItemLinkBlur = function (e) {\n  var $link = e.target || e.srcElement;\n  var $currentSection = $link.closest('.idsk-stepper__section');\n  $currentSection.classList.remove('idsk-stepper__bolder-line') \n}\n\n// Set individual header attributes\nStepper.prototype.initHeaderAttributes = function ($headerWrapper, index) {\n  var $module = this.$module\n  var $span = $headerWrapper.querySelector('.' + this.$sectionButtonClass)\n  var $heading = $headerWrapper.querySelector('.' + this.$sectionHeadingClass)\n  var $summary = $headerWrapper.querySelector('.' + this.$sectionSummaryClass)\n\n  if (!$span) {\n    return;\n  }\n\n  // Copy existing span element to an actual button element, for improved accessibility.\n  var $button = document.createElement('button')\n  $button.setAttribute('type', 'button')\n  $button.setAttribute('id', this.$moduleId + '-heading-' + (index + 1))\n  $button.setAttribute('aria-controls', this.$moduleId + '-content-' + (index + 1))\n\n  // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n  for (var i = 0; i < $span.attributes.length; i++) {\n    var $attr = $span.attributes.item(i)\n    $button.setAttribute($attr.nodeName, $attr.nodeValue)\n  }\n\n  $button.addEventListener('focusin', function (e) {\n    if (!$headerWrapper.classList.contains($module.$sectionHeaderFocusedClass)) {\n      $headerWrapper.className += ' ' + $module.$sectionHeaderFocusedClass\n    }\n  })\n\n  $button.addEventListener('blur', function (e) {\n    $headerWrapper.classList.remove($module.$sectionHeaderFocusedClass)\n  })\n\n  if (typeof ($summary) !== 'undefined' && $summary !== null) {\n    $button.setAttribute('aria-describedby', this.$moduleId + '-summary-' + (index + 1))\n  }\n\n  // $span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n  $button.innerHTML = $span.innerHTML\n\n  $heading.removeChild($span)\n  $heading.appendChild($button)\n\n  // Add \"+/-\" icon\n  var $icon = document.createElement('span')\n  $icon.className = this.$iconClass\n  $icon.setAttribute('aria-hidden', 'true')\n\n  $heading.appendChild($icon)\n}\n\n// When section toggled, set and store state\nStepper.prototype.onSectionToggle = function ($section) {\n  var $expanded = this.isExpanded($section)\n  this.setExpanded(!$expanded, $section)\n\n  // Store the state in sessionStorage when a change is triggered\n  this.storeState($section)\n}\n\n// When Open/Zatvoriť všetko toggled, set and store state\nStepper.prototype.onOpenOrCloseAllToggle = function () {\n  var $self = this\n  var $sections = this.$sections\n  var $nowExpanded = !this.checkIfAllSectionsOpen()\n\n  nodeListForEach($sections, function ($section) {\n    $self.setExpanded($nowExpanded, $section)\n    // Store the state in sessionStorage when a change is triggered\n    $self.storeState($section)\n  })\n\n  $self.updateOpenAllButton($nowExpanded)\n}\n\n// Set section attributes when opened/closed\nStepper.prototype.setExpanded = function ($expanded, $section) {\n  var $button = $section.querySelector('.' + this.$sectionButtonClass)\n  if (!$button) {\n    return;\n  }\n  $button.setAttribute('aria-expanded', $expanded)\n\n  if ($expanded) {\n    $section.classList.add(this.$sectionExpandedClass)\n  } else {\n    $section.classList.remove(this.$sectionExpandedClass)\n  }\n\n  // See if \"Zobraziť všetko\" button text should be updated\n  var $areAllSectionsOpen = this.checkIfAllSectionsOpen()\n  this.updateOpenAllButton($areAllSectionsOpen)\n}\n\n// Get state of section\nStepper.prototype.isExpanded = function ($section) {\n  return $section.classList.contains(this.$sectionExpandedClass)\n}\n\n// Check if all sections are open\nStepper.prototype.checkIfAllSectionsOpen = function () {\n  // Get a count of all the Accordion sections\n  var $sectionsCount = this.$sections.length\n  // Get a count of all Accordion sections that are expanded\n  var $expandedSectionCount = this.$module.querySelectorAll('.' + this.$sectionExpandedClass).length\n  var $areAllSectionsOpen = $sectionsCount === $expandedSectionCount\n\n  return $areAllSectionsOpen\n}\n\n// Update \"Zobraziť všetko\" button\nStepper.prototype.updateOpenAllButton = function ($expanded) {\n  var $accordionControls = this.$module.querySelector('.idsk-stepper__controls');\n  var $newButtonText = $expanded ? $accordionControls.dataset.line2 : $accordionControls.dataset.line1\n  $newButtonText += '<span class=\"govuk-visually-hidden\"> sections</span>'\n  this.$openAllButton.setAttribute('aria-expanded', $expanded)\n  this.$openAllButton.innerHTML = $newButtonText\n}\n\n// Check for `window.sessionStorage`, and that it actually works.\nvar $helper = {\n  checkForSessionStorage: function () {\n    var $testString = 'this is the test string'\n    var $result\n    try {\n      window.sessionStorage.setItem($testString, $testString)\n      $result = window.sessionStorage.getItem($testString) === $testString.toString()\n      window.sessionStorage.removeItem($testString)\n      return $result\n    } catch (exception) {\n      if ((typeof console === 'undefined' || typeof console.log === 'undefined')) {\n        console.log('Notice: sessionStorage not available.')\n      }\n    }\n  }\n}\n\n// Set the state of the accordions in sessionStorage\nStepper.prototype.storeState = function ($section) {\n  if (this.$browserSupportsSessionStorage) {\n    // We need a unique way of identifying each content in the accordion. Since\n    // an `#id` should be unique and an `id` is required for `aria-` attributes\n    // `id` can be safely used.\n    var $button = $section.querySelector('.' + this.$sectionButtonClass)\n\n    if ($button) {\n      var $contentId = $button.getAttribute('aria-controls')\n      var $contentState = $button.getAttribute('aria-expanded')\n\n      if (typeof $contentId === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n        console.error(new Error('No aria controls present in accordion section heading.'))\n      }\n\n      if (typeof $contentState === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n        console.error(new Error('No aria expanded present in accordion section heading.'))\n      }\n\n      // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n      if ($contentId && $contentState) {\n        window.sessionStorage.setItem($contentId, $contentState)\n      }\n    }\n  }\n}\n\n// Read the state of the accordions from sessionStorage\nStepper.prototype.setInitialState = function ($section) {\n  if (this.$browserSupportsSessionStorage) {\n    var $button = $section.querySelector('.' + this.$sectionButtonClass)\n\n    if ($button) {\n      var $contentId = $button.getAttribute('aria-controls')\n      var $contentState = $contentId ? window.sessionStorage.getItem($contentId) : null\n\n      if ($contentState !== null) {\n        this.setExpanded($contentState === 'true', $section)\n      }\n    }\n  }\n}\n\nexport default Stepper\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}