{"ast":null,"code":"import _typeof from \"/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.to-string-tag.js\";\nimport \"core-js/modules/es.json.to-string-tag.js\";\nimport \"core-js/modules/es.math.to-string-tag.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport '../../Object/defineProperty';\n(function (undefined) {\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\n  var detect = ('bind' in Function.prototype);\n  if (detect) return;\n\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\n  Object.defineProperty(Function.prototype, 'bind', {\n    value: function bind(that) {\n      // .length is 1\n      // add necessary es5-shim utilities\n      var $Array = Array;\n      var $Object = Object;\n      var ObjectPrototype = $Object.prototype;\n      var ArrayPrototype = $Array.prototype;\n      var Empty = function Empty() {};\n      var to_string = ObjectPrototype.toString;\n      var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';\n      var isCallable; /* inlined from https://npmjs.com/is-callable */\n      var fnToStr = Function.prototype.toString,\n        tryFunctionObject = function tryFunctionObject(value) {\n          try {\n            fnToStr.call(value);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        },\n        fnClass = '[object Function]',\n        genClass = '[object GeneratorFunction]';\n      isCallable = function isCallable(value) {\n        if (typeof value !== 'function') {\n          return false;\n        }\n        if (hasToStringTag) {\n          return tryFunctionObject(value);\n        }\n        var strClass = to_string.call(value);\n        return strClass === fnClass || strClass === genClass;\n      };\n      var array_slice = ArrayPrototype.slice;\n      var array_concat = ArrayPrototype.concat;\n      var array_push = ArrayPrototype.push;\n      var max = Math.max;\n      // /add necessary es5-shim utilities\n\n      // 1. Let Target be the this value.\n      var target = this;\n      // 2. If IsCallable(Target) is false, throw a TypeError exception.\n      if (!isCallable(target)) {\n        throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n      }\n      // 3. Let A be a new (possibly empty) internal list of all of the\n      //   argument values provided after thisArg (arg1, arg2 etc), in order.\n      // XXX slicedArgs will stand in for \"A\" if used\n      var args = array_slice.call(arguments, 1); // for normal call\n      // 4. Let F be a new native ECMAScript object.\n      // 11. Set the [[Prototype]] internal property of F to the standard\n      //   built-in Function prototype object as specified in 15.3.3.1.\n      // 12. Set the [[Call]] internal property of F as described in\n      //   15.3.4.5.1.\n      // 13. Set the [[Construct]] internal property of F as described in\n      //   15.3.4.5.2.\n      // 14. Set the [[HasInstance]] internal property of F as described in\n      //   15.3.4.5.3.\n      var bound;\n      var binder = function binder() {\n        if (this instanceof bound) {\n          // 15.3.4.5.2 [[Construct]]\n          // When the [[Construct]] internal method of a function object,\n          // F that was created using the bind function is called with a\n          // list of arguments ExtraArgs, the following steps are taken:\n          // 1. Let target be the value of F's [[TargetFunction]]\n          //   internal property.\n          // 2. If target has no [[Construct]] internal method, a\n          //   TypeError exception is thrown.\n          // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n          //   property.\n          // 4. Let args be a new list containing the same values as the\n          //   list boundArgs in the same order followed by the same\n          //   values as the list ExtraArgs in the same order.\n          // 5. Return the result of calling the [[Construct]] internal\n          //   method of target providing args as the arguments.\n\n          var result = target.apply(this, array_concat.call(args, array_slice.call(arguments)));\n          if ($Object(result) === result) {\n            return result;\n          }\n          return this;\n        } else {\n          // 15.3.4.5.1 [[Call]]\n          // When the [[Call]] internal method of a function object, F,\n          // which was created using the bind function is called with a\n          // this value and a list of arguments ExtraArgs, the following\n          // steps are taken:\n          // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n          //   property.\n          // 2. Let boundThis be the value of F's [[BoundThis]] internal\n          //   property.\n          // 3. Let target be the value of F's [[TargetFunction]] internal\n          //   property.\n          // 4. Let args be a new list containing the same values as the\n          //   list boundArgs in the same order followed by the same\n          //   values as the list ExtraArgs in the same order.\n          // 5. Return the result of calling the [[Call]] internal method\n          //   of target providing boundThis as the this value and\n          //   providing args as the arguments.\n\n          // equiv: target.call(this, ...boundArgs, ...args)\n          return target.apply(that, array_concat.call(args, array_slice.call(arguments)));\n        }\n      };\n\n      // 15. If the [[Class]] internal property of Target is \"Function\", then\n      //     a. Let L be the length property of Target minus the length of A.\n      //     b. Set the length own property of F to either 0 or L, whichever is\n      //       larger.\n      // 16. Else set the length own property of F to 0.\n\n      var boundLength = max(0, target.length - args.length);\n\n      // 17. Set the attributes of the length own property of F to the values\n      //   specified in 15.3.5.1.\n      var boundArgs = [];\n      for (var i = 0; i < boundLength; i++) {\n        array_push.call(boundArgs, '$' + i);\n      }\n\n      // XXX Build a dynamic function with desired amount of arguments is the only\n      // way to set the length property of a function.\n      // In environments where Content Security Policies enabled (Chrome extensions,\n      // for ex.) all use of eval or Function costructor throws an exception.\n      // However in all of these environments Function.prototype.bind exists\n      // and so this code will never be executed.\n      bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n      if (target.prototype) {\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        // Clean up dangling references.\n        Empty.prototype = null;\n      }\n\n      // TODO\n      // 18. Set the [[Extensible]] internal property of F to true.\n\n      // TODO\n      // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n      // 20. Call the [[DefineOwnProperty]] internal method of F with\n      //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n      //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n      //   false.\n      // 21. Call the [[DefineOwnProperty]] internal method of F with\n      //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n      //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n      //   and false.\n\n      // TODO\n      // NOTE Function objects created using Function.prototype.bind do not\n      // have a prototype property or the [[Code]], [[FormalParameters]], and\n      // [[Scope]] internal properties.\n      // XXX can't delete prototype in pure-js.\n\n      // 22. Return F.\n      return bound;\n    }\n  });\n}).call('object' === (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) && window || 'object' === (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) && self || 'object' === (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) && global || {});","map":{"version":3,"names":["undefined","detect","Function","prototype","Object","defineProperty","value","bind","that","$Array","Array","$Object","ObjectPrototype","ArrayPrototype","Empty","to_string","toString","hasToStringTag","Symbol","toStringTag","isCallable","fnToStr","tryFunctionObject","call","e","fnClass","genClass","strClass","array_slice","slice","array_concat","concat","array_push","push","max","Math","target","TypeError","args","arguments","bound","binder","result","apply","boundLength","length","boundArgs","i","join","window","self","global"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/govuk/vendor/polyfills/Function/prototype/bind.js"],"sourcesContent":["import '../../Object/defineProperty'\n\n(function(undefined) {\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\n  var detect = 'bind' in Function.prototype\n\n  if (detect) return\n\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\n  Object.defineProperty(Function.prototype, 'bind', {\n      value: function bind(that) { // .length is 1\n          // add necessary es5-shim utilities\n          var $Array = Array;\n          var $Object = Object;\n          var ObjectPrototype = $Object.prototype;\n          var ArrayPrototype = $Array.prototype;\n          var Empty = function Empty() {};\n          var to_string = ObjectPrototype.toString;\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\n          var array_slice = ArrayPrototype.slice;\n          var array_concat = ArrayPrototype.concat;\n          var array_push = ArrayPrototype.push;\n          var max = Math.max;\n          // /add necessary es5-shim utilities\n\n          // 1. Let Target be the this value.\n          var target = this;\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\n          if (!isCallable(target)) {\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n          }\n          // 3. Let A be a new (possibly empty) internal list of all of the\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\n          // XXX slicedArgs will stand in for \"A\" if used\n          var args = array_slice.call(arguments, 1); // for normal call\n          // 4. Let F be a new native ECMAScript object.\n          // 11. Set the [[Prototype]] internal property of F to the standard\n          //   built-in Function prototype object as specified in 15.3.3.1.\n          // 12. Set the [[Call]] internal property of F as described in\n          //   15.3.4.5.1.\n          // 13. Set the [[Construct]] internal property of F as described in\n          //   15.3.4.5.2.\n          // 14. Set the [[HasInstance]] internal property of F as described in\n          //   15.3.4.5.3.\n          var bound;\n          var binder = function () {\n\n              if (this instanceof bound) {\n                  // 15.3.4.5.2 [[Construct]]\n                  // When the [[Construct]] internal method of a function object,\n                  // F that was created using the bind function is called with a\n                  // list of arguments ExtraArgs, the following steps are taken:\n                  // 1. Let target be the value of F's [[TargetFunction]]\n                  //   internal property.\n                  // 2. If target has no [[Construct]] internal method, a\n                  //   TypeError exception is thrown.\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                  //   property.\n                  // 4. Let args be a new list containing the same values as the\n                  //   list boundArgs in the same order followed by the same\n                  //   values as the list ExtraArgs in the same order.\n                  // 5. Return the result of calling the [[Construct]] internal\n                  //   method of target providing args as the arguments.\n\n                  var result = target.apply(\n                      this,\n                      array_concat.call(args, array_slice.call(arguments))\n                  );\n                  if ($Object(result) === result) {\n                      return result;\n                  }\n                  return this;\n\n              } else {\n                  // 15.3.4.5.1 [[Call]]\n                  // When the [[Call]] internal method of a function object, F,\n                  // which was created using the bind function is called with a\n                  // this value and a list of arguments ExtraArgs, the following\n                  // steps are taken:\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                  //   property.\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                  //   property.\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\n                  //   property.\n                  // 4. Let args be a new list containing the same values as the\n                  //   list boundArgs in the same order followed by the same\n                  //   values as the list ExtraArgs in the same order.\n                  // 5. Return the result of calling the [[Call]] internal method\n                  //   of target providing boundThis as the this value and\n                  //   providing args as the arguments.\n\n                  // equiv: target.call(this, ...boundArgs, ...args)\n                  return target.apply(\n                      that,\n                      array_concat.call(args, array_slice.call(arguments))\n                  );\n\n              }\n\n          };\n\n          // 15. If the [[Class]] internal property of Target is \"Function\", then\n          //     a. Let L be the length property of Target minus the length of A.\n          //     b. Set the length own property of F to either 0 or L, whichever is\n          //       larger.\n          // 16. Else set the length own property of F to 0.\n\n          var boundLength = max(0, target.length - args.length);\n\n          // 17. Set the attributes of the length own property of F to the values\n          //   specified in 15.3.5.1.\n          var boundArgs = [];\n          for (var i = 0; i < boundLength; i++) {\n              array_push.call(boundArgs, '$' + i);\n          }\n\n          // XXX Build a dynamic function with desired amount of arguments is the only\n          // way to set the length property of a function.\n          // In environments where Content Security Policies enabled (Chrome extensions,\n          // for ex.) all use of eval or Function costructor throws an exception.\n          // However in all of these environments Function.prototype.bind exists\n          // and so this code will never be executed.\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n          if (target.prototype) {\n              Empty.prototype = target.prototype;\n              bound.prototype = new Empty();\n              // Clean up dangling references.\n              Empty.prototype = null;\n          }\n\n          // TODO\n          // 18. Set the [[Extensible]] internal property of F to true.\n\n          // TODO\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\n          //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n          //   false.\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\n          //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n          //   and false.\n\n          // TODO\n          // NOTE Function objects created using Function.prototype.bind do not\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\n          // [[Scope]] internal properties.\n          // XXX can't delete prototype in pure-js.\n\n          // 22. Return F.\n          return bound;\n      }\n  });\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}