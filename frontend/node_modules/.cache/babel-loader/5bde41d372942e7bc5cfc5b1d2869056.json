{"ast":null,"code":"import \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport '../../vendor/polyfills/Function/prototype/bind';\nimport '../../vendor/polyfills/Event'; // addEventListener and event.target normaliziation\nimport '../../vendor/polyfills/Element/prototype/classList';\nimport { nodeListForEach } from '../../common';\nfunction Radios($module) {\n  this.$module = $module;\n}\nRadios.prototype.init = function () {\n  var $module = this.$module;\n  var $inputs = $module.querySelectorAll('input[type=\"radio\"]');\n\n  /**\n  * Loop over all items with [data-controls]\n  * Check if they have a matching conditional reveal\n  * If they do, assign attributes.\n  **/\n  nodeListForEach($inputs, function ($input) {\n    var controls = $input.getAttribute('data-aria-controls');\n\n    // Check if input controls anything\n    // Check if content exists, before setting attributes.\n    if (!controls || !$module.querySelector('#' + controls)) {\n      return;\n    }\n\n    // If we have content that is controlled, set attributes.\n    $input.setAttribute('aria-controls', controls);\n    $input.removeAttribute('data-aria-controls');\n    this.setAttributes($input);\n  }.bind(this));\n\n  // Handle events\n  $module.addEventListener('click', this.handleClick.bind(this));\n};\nRadios.prototype.setAttributes = function ($input) {\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'));\n  if ($content && $content.classList.contains('govuk-radios__conditional')) {\n    var inputIsChecked = $input.checked;\n    $input.setAttribute('aria-expanded', inputIsChecked);\n    $content.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked);\n  }\n};\nRadios.prototype.handleClick = function (event) {\n  var $clickedInput = event.target;\n  // We only want to handle clicks for radio inputs\n  if ($clickedInput.type !== 'radio') {\n    return;\n  }\n  // Because checking one radio can uncheck a radio in another $module,\n  // we need to call set attributes on all radios in the same form, or document if they're not in a form.\n  //\n  // We also only want radios which have aria-controls, as they support conditional reveals.\n  var $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]');\n  nodeListForEach($allInputs, function ($input) {\n    // Only inputs with the same form owner should change.\n    var hasSameFormOwner = $input.form === $clickedInput.form;\n\n    // In radios, only radios with the same name will affect each other.\n    var hasSameName = $input.name === $clickedInput.name;\n    if (hasSameName && hasSameFormOwner) {\n      this.setAttributes($input);\n    }\n  }.bind(this));\n};\nexport default Radios;","map":{"version":3,"names":["nodeListForEach","Radios","$module","prototype","init","$inputs","querySelectorAll","$input","controls","getAttribute","querySelector","setAttribute","removeAttribute","setAttributes","bind","addEventListener","handleClick","$content","document","classList","contains","inputIsChecked","checked","toggle","event","$clickedInput","target","type","$allInputs","hasSameFormOwner","form","hasSameName","name"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/govuk/components/radios/radios.js"],"sourcesContent":["import '../../vendor/polyfills/Function/prototype/bind'\nimport '../../vendor/polyfills/Event' // addEventListener and event.target normaliziation\nimport '../../vendor/polyfills/Element/prototype/classList'\nimport { nodeListForEach } from '../../common'\n\nfunction Radios ($module) {\n  this.$module = $module\n}\n\nRadios.prototype.init = function () {\n  var $module = this.$module\n  var $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n\n  /**\n  * Loop over all items with [data-controls]\n  * Check if they have a matching conditional reveal\n  * If they do, assign attributes.\n  **/\n  nodeListForEach($inputs, function ($input) {\n    var controls = $input.getAttribute('data-aria-controls')\n\n    // Check if input controls anything\n    // Check if content exists, before setting attributes.\n    if (!controls || !$module.querySelector('#' + controls)) {\n      return\n    }\n\n    // If we have content that is controlled, set attributes.\n    $input.setAttribute('aria-controls', controls)\n    $input.removeAttribute('data-aria-controls')\n    this.setAttributes($input)\n  }.bind(this))\n\n  // Handle events\n  $module.addEventListener('click', this.handleClick.bind(this))\n}\n\nRadios.prototype.setAttributes = function ($input) {\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'))\n\n  if ($content && $content.classList.contains('govuk-radios__conditional')) {\n    var inputIsChecked = $input.checked\n\n    $input.setAttribute('aria-expanded', inputIsChecked)\n\n    $content.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked)\n  }\n}\n\nRadios.prototype.handleClick = function (event) {\n  var $clickedInput = event.target\n  // We only want to handle clicks for radio inputs\n  if ($clickedInput.type !== 'radio') {\n    return\n  }\n  // Because checking one radio can uncheck a radio in another $module,\n  // we need to call set attributes on all radios in the same form, or document if they're not in a form.\n  //\n  // We also only want radios which have aria-controls, as they support conditional reveals.\n  var $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]')\n  nodeListForEach($allInputs, function ($input) {\n    // Only inputs with the same form owner should change.\n    var hasSameFormOwner = ($input.form === $clickedInput.form)\n\n    // In radios, only radios with the same name will affect each other.\n    var hasSameName = ($input.name === $clickedInput.name)\n    if (hasSameName && hasSameFormOwner) {\n      this.setAttributes($input)\n    }\n  }.bind(this))\n}\n\nexport default Radios\n"],"mappings":";;AAAA,OAAO,gDAAgD;AACvD,OAAO,8BAA8B,EAAC;AACtC,OAAO,oDAAoD;AAC3D,SAASA,eAAe,QAAQ,cAAc;AAE9C,SAASC,MAAM,CAAEC,OAAO,EAAE;EACxB,IAAI,CAACA,OAAO,GAAGA,OAAO;AACxB;AAEAD,MAAM,CAACE,SAAS,CAACC,IAAI,GAAG,YAAY;EAClC,IAAIF,OAAO,GAAG,IAAI,CAACA,OAAO;EAC1B,IAAIG,OAAO,GAAGH,OAAO,CAACI,gBAAgB,CAAC,qBAAqB,CAAC;;EAE7D;AACF;AACA;AACA;AACA;EACEN,eAAe,CAACK,OAAO,EAAE,UAAUE,MAAM,EAAE;IACzC,IAAIC,QAAQ,GAAGD,MAAM,CAACE,YAAY,CAAC,oBAAoB,CAAC;;IAExD;IACA;IACA,IAAI,CAACD,QAAQ,IAAI,CAACN,OAAO,CAACQ,aAAa,CAAC,GAAG,GAAGF,QAAQ,CAAC,EAAE;MACvD;IACF;;IAEA;IACAD,MAAM,CAACI,YAAY,CAAC,eAAe,EAAEH,QAAQ,CAAC;IAC9CD,MAAM,CAACK,eAAe,CAAC,oBAAoB,CAAC;IAC5C,IAAI,CAACC,aAAa,CAACN,MAAM,CAAC;EAC5B,CAAC,CAACO,IAAI,CAAC,IAAI,CAAC,CAAC;;EAEb;EACAZ,OAAO,CAACa,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;AAChE,CAAC;AAEDb,MAAM,CAACE,SAAS,CAACU,aAAa,GAAG,UAAUN,MAAM,EAAE;EACjD,IAAIU,QAAQ,GAAGC,QAAQ,CAACR,aAAa,CAAC,GAAG,GAAGH,MAAM,CAACE,YAAY,CAAC,eAAe,CAAC,CAAC;EAEjF,IAAIQ,QAAQ,IAAIA,QAAQ,CAACE,SAAS,CAACC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;IACxE,IAAIC,cAAc,GAAGd,MAAM,CAACe,OAAO;IAEnCf,MAAM,CAACI,YAAY,CAAC,eAAe,EAAEU,cAAc,CAAC;IAEpDJ,QAAQ,CAACE,SAAS,CAACI,MAAM,CAAC,mCAAmC,EAAE,CAACF,cAAc,CAAC;EACjF;AACF,CAAC;AAEDpB,MAAM,CAACE,SAAS,CAACa,WAAW,GAAG,UAAUQ,KAAK,EAAE;EAC9C,IAAIC,aAAa,GAAGD,KAAK,CAACE,MAAM;EAChC;EACA,IAAID,aAAa,CAACE,IAAI,KAAK,OAAO,EAAE;IAClC;EACF;EACA;EACA;EACA;EACA;EACA,IAAIC,UAAU,GAAGV,QAAQ,CAACZ,gBAAgB,CAAC,oCAAoC,CAAC;EAChFN,eAAe,CAAC4B,UAAU,EAAE,UAAUrB,MAAM,EAAE;IAC5C;IACA,IAAIsB,gBAAgB,GAAItB,MAAM,CAACuB,IAAI,KAAKL,aAAa,CAACK,IAAK;;IAE3D;IACA,IAAIC,WAAW,GAAIxB,MAAM,CAACyB,IAAI,KAAKP,aAAa,CAACO,IAAK;IACtD,IAAID,WAAW,IAAIF,gBAAgB,EAAE;MACnC,IAAI,CAAChB,aAAa,CAACN,MAAM,CAAC;IAC5B;EACF,CAAC,CAACO,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,CAAC;AAED,eAAeb,MAAM"},"metadata":{},"sourceType":"module"}