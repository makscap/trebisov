{"ast":null,"code":"import { nodeListForEach } from './common';\nimport Button from './components/button/button';\nimport Details from './components/details/details';\nimport CharacterCount from './components/character-count/character-count';\nimport Checkboxes from './components/checkboxes/checkboxes';\nimport ErrorSummary from './components/error-summary/error-summary';\nimport Radios from './components/radios/radios';\nfunction initCore(options) {\n  // Set the options to an empty object by default if no options are passed.\n  options = typeof options !== 'undefined' ? options : {};\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  var scope = typeof options.scope !== 'undefined' ? options.scope : document;\n  var $buttons = scope.querySelectorAll('[data-module=\"govuk-button\"]');\n  nodeListForEach($buttons, function ($button) {\n    new Button($button).init();\n  });\n  var $details = scope.querySelectorAll('[data-module=\"govuk-details\"]');\n  nodeListForEach($details, function ($detail) {\n    new Details($detail).init();\n  });\n  var $characterCounts = scope.querySelectorAll('[data-module=\"govuk-character-count\"]');\n  nodeListForEach($characterCounts, function ($characterCount) {\n    new CharacterCount($characterCount).init();\n  });\n  var $checkboxes = scope.querySelectorAll('[data-module=\"govuk-checkboxes\"]');\n  nodeListForEach($checkboxes, function ($checkbox) {\n    new Checkboxes($checkbox).init();\n  });\n\n  // Find first error summary module to enhance.\n  var $errorSummary = scope.querySelector('[data-module=\"govuk-error-summary\"]');\n  new ErrorSummary($errorSummary).init();\n  var $radios = scope.querySelectorAll('[data-module=\"govuk-radios\"]');\n  nodeListForEach($radios, function ($radio) {\n    new Radios($radio).init();\n  });\n}\nexport { initCore, Button, Details, CharacterCount, Checkboxes, ErrorSummary, Radios };","map":{"version":3,"names":["nodeListForEach","Button","Details","CharacterCount","Checkboxes","ErrorSummary","Radios","initCore","options","scope","document","$buttons","querySelectorAll","$button","init","$details","$detail","$characterCounts","$characterCount","$checkboxes","$checkbox","$errorSummary","querySelector","$radios","$radio"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/govuk/core.js"],"sourcesContent":["import { nodeListForEach } from './common'\nimport Button from './components/button/button'\nimport Details from './components/details/details'\nimport CharacterCount from './components/character-count/character-count'\nimport Checkboxes from './components/checkboxes/checkboxes'\nimport ErrorSummary from './components/error-summary/error-summary'\nimport Radios from './components/radios/radios'\n\nfunction initCore(options) {\n  // Set the options to an empty object by default if no options are passed.\n  options = typeof options !== 'undefined' ? options : {}\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  var scope = typeof options.scope !== 'undefined' ? options.scope : document\n\n  var $buttons = scope.querySelectorAll('[data-module=\"govuk-button\"]')\n  nodeListForEach($buttons, function ($button) {\n    new Button($button).init()\n  })\n\n  var $details = scope.querySelectorAll('[data-module=\"govuk-details\"]')\n  nodeListForEach($details, function ($detail) {\n    new Details($detail).init()\n  })\n\n  var $characterCounts = scope.querySelectorAll('[data-module=\"govuk-character-count\"]')\n  nodeListForEach($characterCounts, function ($characterCount) {\n    new CharacterCount($characterCount).init()\n  })\n\n  var $checkboxes = scope.querySelectorAll('[data-module=\"govuk-checkboxes\"]')\n  nodeListForEach($checkboxes, function ($checkbox) {\n    new Checkboxes($checkbox).init()\n  })\n\n  // Find first error summary module to enhance.\n  var $errorSummary = scope.querySelector('[data-module=\"govuk-error-summary\"]')\n  new ErrorSummary($errorSummary).init()\n\n  var $radios = scope.querySelectorAll('[data-module=\"govuk-radios\"]')\n  nodeListForEach($radios, function ($radio) {\n    new Radios($radio).init()\n  })\n}\n\nexport {\n  initCore,\n  Button,\n  Details,\n  CharacterCount,\n  Checkboxes,\n  ErrorSummary,\n  Radios\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,UAAU;AAC1C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,cAAc,MAAM,8CAA8C;AACzE,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,0CAA0C;AACnE,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,SAASC,QAAQ,CAACC,OAAO,EAAE;EACzB;EACAA,OAAO,GAAG,OAAOA,OAAO,KAAK,WAAW,GAAGA,OAAO,GAAG,CAAC,CAAC;;EAEvD;EACA;EACA,IAAIC,KAAK,GAAG,OAAOD,OAAO,CAACC,KAAK,KAAK,WAAW,GAAGD,OAAO,CAACC,KAAK,GAAGC,QAAQ;EAE3E,IAAIC,QAAQ,GAAGF,KAAK,CAACG,gBAAgB,CAAC,8BAA8B,CAAC;EACrEZ,eAAe,CAACW,QAAQ,EAAE,UAAUE,OAAO,EAAE;IAC3C,IAAIZ,MAAM,CAACY,OAAO,CAAC,CAACC,IAAI,EAAE;EAC5B,CAAC,CAAC;EAEF,IAAIC,QAAQ,GAAGN,KAAK,CAACG,gBAAgB,CAAC,+BAA+B,CAAC;EACtEZ,eAAe,CAACe,QAAQ,EAAE,UAAUC,OAAO,EAAE;IAC3C,IAAId,OAAO,CAACc,OAAO,CAAC,CAACF,IAAI,EAAE;EAC7B,CAAC,CAAC;EAEF,IAAIG,gBAAgB,GAAGR,KAAK,CAACG,gBAAgB,CAAC,uCAAuC,CAAC;EACtFZ,eAAe,CAACiB,gBAAgB,EAAE,UAAUC,eAAe,EAAE;IAC3D,IAAIf,cAAc,CAACe,eAAe,CAAC,CAACJ,IAAI,EAAE;EAC5C,CAAC,CAAC;EAEF,IAAIK,WAAW,GAAGV,KAAK,CAACG,gBAAgB,CAAC,kCAAkC,CAAC;EAC5EZ,eAAe,CAACmB,WAAW,EAAE,UAAUC,SAAS,EAAE;IAChD,IAAIhB,UAAU,CAACgB,SAAS,CAAC,CAACN,IAAI,EAAE;EAClC,CAAC,CAAC;;EAEF;EACA,IAAIO,aAAa,GAAGZ,KAAK,CAACa,aAAa,CAAC,qCAAqC,CAAC;EAC9E,IAAIjB,YAAY,CAACgB,aAAa,CAAC,CAACP,IAAI,EAAE;EAEtC,IAAIS,OAAO,GAAGd,KAAK,CAACG,gBAAgB,CAAC,8BAA8B,CAAC;EACpEZ,eAAe,CAACuB,OAAO,EAAE,UAAUC,MAAM,EAAE;IACzC,IAAIlB,MAAM,CAACkB,MAAM,CAAC,CAACV,IAAI,EAAE;EAC3B,CAAC,CAAC;AACJ;AAEA,SACEP,QAAQ,EACRN,MAAM,EACNC,OAAO,EACPC,cAAc,EACdC,UAAU,EACVC,YAAY,EACZC,MAAM"},"metadata":{},"sourceType":"module"}