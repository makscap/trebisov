{"ast":null,"code":"import \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/web.timers.js\";\nimport '../../../govuk/vendor/polyfills/Function/prototype/bind';\nimport '../../../govuk/vendor/polyfills/Event'; // addEventListener and event.target normalization\nimport '../../../govuk/vendor/polyfills/Element/prototype/classList';\nfunction CharacterCount($module) {\n  this.$module = $module;\n  this.$textarea = $module.querySelector('.govuk-js-character-count');\n}\nCharacterCount.prototype.defaults = {\n  characterCountAttribute: 'data-maxlength',\n  wordCountAttribute: 'data-maxwords'\n};\n\n// Initialize component\nCharacterCount.prototype.init = function () {\n  // Check for module\n  var $module = this.$module;\n  var $textarea = this.$textarea;\n  if (!$textarea) {\n    return;\n  }\n\n  // Read options set using dataset ('data-' values)\n  this.options = this.getDataset($module);\n\n  // Determine the limit attribute (characters or words)\n  var countAttribute = this.defaults.characterCountAttribute;\n  if (this.options.maxwords) {\n    countAttribute = this.defaults.wordCountAttribute;\n  }\n\n  // Save the element limit\n  this.maxLength = $module.getAttribute(countAttribute);\n\n  // Check for limit\n  if (!this.maxLength) {\n    return;\n  }\n\n  // Generate and reference message\n  var boundCreateCountMessage = this.createCountMessage.bind(this);\n  this.countMessage = boundCreateCountMessage();\n\n  // If there's a maximum length defined and the count message exists\n  if (this.countMessage) {\n    // Remove hard limit if set\n    $module.removeAttribute('maxlength');\n\n    // Bind event changes to the textarea\n    var boundChangeEvents = this.bindChangeEvents.bind(this);\n    boundChangeEvents();\n\n    // Update count message\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this);\n    boundUpdateCountMessage();\n  }\n};\n\n// Read data attributes\nCharacterCount.prototype.getDataset = function (element) {\n  var dataset = {};\n  var attributes = element.attributes;\n  if (attributes) {\n    for (var i = 0; i < attributes.length; i++) {\n      var attribute = attributes[i];\n      var match = attribute.name.match(/^data-(.+)/);\n      if (match) {\n        dataset[match[1]] = attribute.value;\n      }\n    }\n  }\n  return dataset;\n};\n\n// Counts characters or words in text\nCharacterCount.prototype.count = function (text) {\n  var length;\n  if (this.options.maxwords) {\n    var tokens = text.match(/\\S+/g) || []; // Matches consecutive non-whitespace chars\n    length = tokens.length;\n  } else {\n    length = text.length;\n  }\n  return length;\n};\n\n// Generate count message and bind it to the input\n// returns reference to the generated element\nCharacterCount.prototype.createCountMessage = function () {\n  var countElement = this.$textarea;\n  var elementId = countElement.id;\n  // Check for existing info count message\n  var countMessage = document.getElementById(elementId + '-info');\n  // If there is no existing info count message we add one right after the field\n  if (elementId && !countMessage) {\n    countElement.insertAdjacentHTML('afterend', '<span id=\"' + elementId + '-info\" class=\"govuk-hint govuk-character-count__message\" aria-live=\"polite\"></span>');\n    this.describedBy = countElement.getAttribute('aria-describedby');\n    this.describedByInfo = this.describedBy + ' ' + elementId + '-info';\n    countElement.setAttribute('aria-describedby', this.describedByInfo);\n    countMessage = document.getElementById(elementId + '-info');\n  } else {\n    // If there is an existing info count message we move it right after the field\n    countElement.insertAdjacentElement('afterend', countMessage);\n  }\n  return countMessage;\n};\n\n// Bind input propertychange to the elements and update based on the change\nCharacterCount.prototype.bindChangeEvents = function () {\n  var $textarea = this.$textarea;\n  $textarea.addEventListener('keyup', this.checkIfValueChanged.bind(this));\n\n  // Bind focus/blur events to start/stop polling\n  $textarea.addEventListener('focus', this.handleFocus.bind(this));\n  $textarea.addEventListener('blur', this.handleBlur.bind(this));\n};\n\n// Speech recognition software such as Dragon NaturallySpeaking will modify the\n// fields by directly changing its `value`. These changes don't trigger events\n// in JavaScript, so we need to poll to handle when and if they occur.\nCharacterCount.prototype.checkIfValueChanged = function () {\n  if (!this.$textarea.oldValue) this.$textarea.oldValue = '';\n  if (this.$textarea.value !== this.$textarea.oldValue) {\n    this.$textarea.oldValue = this.$textarea.value;\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this);\n    boundUpdateCountMessage();\n  }\n};\n\n// Update message box\nCharacterCount.prototype.updateCountMessage = function () {\n  var countElement = this.$textarea;\n  var options = this.options;\n  var countMessage = this.countMessage;\n\n  // Determine the remaining number of characters/words\n  var currentLength = this.count(countElement.value);\n  var maxLength = this.maxLength;\n  var remainingNumber = maxLength - currentLength;\n\n  // Set threshold if presented in options\n  var thresholdPercent = options.threshold ? options.threshold : 0;\n  var thresholdValue = maxLength * thresholdPercent / 100;\n  if (thresholdValue > currentLength) {\n    countMessage.classList.add('govuk-character-count__message--disabled');\n    // Ensure threshold is hidden for users of assistive technologies\n    countMessage.setAttribute('aria-hidden', true);\n  } else {\n    countMessage.classList.remove('govuk-character-count__message--disabled');\n    // Ensure threshold is visible for users of assistive technologies\n    countMessage.removeAttribute('aria-hidden');\n  }\n\n  // Update styles\n  if (remainingNumber < 0) {\n    countElement.classList.add('govuk-textarea--error');\n    countMessage.classList.remove('govuk-hint');\n    countMessage.classList.add('govuk-error-message');\n  } else {\n    countElement.classList.remove('govuk-textarea--error');\n    countMessage.classList.remove('govuk-error-message');\n    countMessage.classList.add('govuk-hint');\n  }\n\n  // Update message\n  var charVerb = '';\n  var charNoun = 'znak';\n  var displayNumber = remainingNumber;\n  if (options.maxwords) {\n    charNoun = 'slov';\n  }\n  if (remainingNumber > 1 && remainingNumber < 5 || remainingNumber > -5 && remainingNumber < -1) {\n    charNoun = charNoun + 'y';\n  } else if (remainingNumber == 1 || remainingNumber == -1) {} else {\n    charNoun = charNoun + 'ov';\n  }\n  displayNumber = Math.abs(remainingNumber);\n  if (remainingNumber < 0) {\n    displayNumber = '-' + displayNumber;\n    countMessage.innerHTML = 'Prekročili ste maximálny počet znakov';\n  } else {\n    countMessage.innerHTML = 'Zostáva Vám ' + displayNumber + ' ' + charNoun + ' ';\n  }\n};\nCharacterCount.prototype.handleFocus = function () {\n  // Check if value changed on focus\n  this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1000);\n};\nCharacterCount.prototype.handleBlur = function () {\n  // Cancel value checking on blur\n  clearInterval(this.valueChecker);\n};\nexport default CharacterCount;","map":{"version":3,"names":["CharacterCount","$module","$textarea","querySelector","prototype","defaults","characterCountAttribute","wordCountAttribute","init","options","getDataset","countAttribute","maxwords","maxLength","getAttribute","boundCreateCountMessage","createCountMessage","bind","countMessage","removeAttribute","boundChangeEvents","bindChangeEvents","boundUpdateCountMessage","updateCountMessage","element","dataset","attributes","i","length","attribute","match","name","value","count","text","tokens","countElement","elementId","id","document","getElementById","insertAdjacentHTML","describedBy","describedByInfo","setAttribute","insertAdjacentElement","addEventListener","checkIfValueChanged","handleFocus","handleBlur","oldValue","currentLength","remainingNumber","thresholdPercent","threshold","thresholdValue","classList","add","remove","charVerb","charNoun","displayNumber","Math","abs","innerHTML","valueChecker","setInterval","clearInterval"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/idsk/components/character-count/character-count.js"],"sourcesContent":["import '../../../govuk/vendor/polyfills/Function/prototype/bind'\nimport '../../../govuk/vendor/polyfills/Event' // addEventListener and event.target normalization\nimport '../../../govuk/vendor/polyfills/Element/prototype/classList'\n\nfunction CharacterCount($module) {\n  this.$module = $module\n  this.$textarea = $module.querySelector('.govuk-js-character-count')\n}\n\nCharacterCount.prototype.defaults = {\n  characterCountAttribute: 'data-maxlength',\n  wordCountAttribute: 'data-maxwords'\n}\n\n// Initialize component\nCharacterCount.prototype.init = function () {\n  // Check for module\n  var $module = this.$module\n  var $textarea = this.$textarea\n  if (!$textarea) {\n    return\n  }\n\n  // Read options set using dataset ('data-' values)\n  this.options = this.getDataset($module)\n\n  // Determine the limit attribute (characters or words)\n  var countAttribute = this.defaults.characterCountAttribute\n  if (this.options.maxwords) {\n    countAttribute = this.defaults.wordCountAttribute\n  }\n\n  // Save the element limit\n  this.maxLength = $module.getAttribute(countAttribute)\n\n  // Check for limit\n  if (!this.maxLength) {\n    return\n  }\n\n  // Generate and reference message\n  var boundCreateCountMessage = this.createCountMessage.bind(this)\n  this.countMessage = boundCreateCountMessage()\n\n  // If there's a maximum length defined and the count message exists\n  if (this.countMessage) {\n    // Remove hard limit if set\n    $module.removeAttribute('maxlength')\n\n    // Bind event changes to the textarea\n    var boundChangeEvents = this.bindChangeEvents.bind(this)\n    boundChangeEvents()\n\n    // Update count message\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this)\n    boundUpdateCountMessage()\n  }\n}\n\n// Read data attributes\nCharacterCount.prototype.getDataset = function (element) {\n  var dataset = {}\n  var attributes = element.attributes\n  if (attributes) {\n    for (var i = 0; i < attributes.length; i++) {\n      var attribute = attributes[i]\n      var match = attribute.name.match(/^data-(.+)/)\n      if (match) {\n        dataset[match[1]] = attribute.value\n      }\n    }\n  }\n  return dataset\n}\n\n// Counts characters or words in text\nCharacterCount.prototype.count = function (text) {\n  var length\n  if (this.options.maxwords) {\n    var tokens = text.match(/\\S+/g) || [] // Matches consecutive non-whitespace chars\n    length = tokens.length\n  } else {\n    length = text.length\n  }\n  return length\n}\n\n// Generate count message and bind it to the input\n// returns reference to the generated element\nCharacterCount.prototype.createCountMessage = function () {\n  var countElement = this.$textarea\n  var elementId = countElement.id\n  // Check for existing info count message\n  var countMessage = document.getElementById(elementId + '-info')\n  // If there is no existing info count message we add one right after the field\n  if (elementId && !countMessage) {\n    countElement.insertAdjacentHTML('afterend', '<span id=\"' + elementId + '-info\" class=\"govuk-hint govuk-character-count__message\" aria-live=\"polite\"></span>')\n    this.describedBy = countElement.getAttribute('aria-describedby')\n    this.describedByInfo = this.describedBy + ' ' + elementId + '-info'\n    countElement.setAttribute('aria-describedby', this.describedByInfo)\n    countMessage = document.getElementById(elementId + '-info')\n  } else {\n    // If there is an existing info count message we move it right after the field\n    countElement.insertAdjacentElement('afterend', countMessage)\n  }\n  return countMessage\n}\n\n// Bind input propertychange to the elements and update based on the change\nCharacterCount.prototype.bindChangeEvents = function () {\n  var $textarea = this.$textarea\n  $textarea.addEventListener('keyup', this.checkIfValueChanged.bind(this))\n\n  // Bind focus/blur events to start/stop polling\n  $textarea.addEventListener('focus', this.handleFocus.bind(this))\n  $textarea.addEventListener('blur', this.handleBlur.bind(this))\n}\n\n// Speech recognition software such as Dragon NaturallySpeaking will modify the\n// fields by directly changing its `value`. These changes don't trigger events\n// in JavaScript, so we need to poll to handle when and if they occur.\nCharacterCount.prototype.checkIfValueChanged = function () {\n  if (!this.$textarea.oldValue) this.$textarea.oldValue = ''\n  if (this.$textarea.value !== this.$textarea.oldValue) {\n    this.$textarea.oldValue = this.$textarea.value\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this)\n    boundUpdateCountMessage()\n  }\n}\n\n// Update message box\nCharacterCount.prototype.updateCountMessage = function () {\n  var countElement = this.$textarea\n  var options = this.options\n  var countMessage = this.countMessage\n\n  // Determine the remaining number of characters/words\n  var currentLength = this.count(countElement.value)\n  var maxLength = this.maxLength\n  var remainingNumber = maxLength - currentLength\n\n  // Set threshold if presented in options\n  var thresholdPercent = options.threshold ? options.threshold : 0\n  var thresholdValue = maxLength * thresholdPercent / 100\n  if (thresholdValue > currentLength) {\n    countMessage.classList.add('govuk-character-count__message--disabled')\n    // Ensure threshold is hidden for users of assistive technologies\n    countMessage.setAttribute('aria-hidden', true)\n  } else {\n    countMessage.classList.remove('govuk-character-count__message--disabled')\n    // Ensure threshold is visible for users of assistive technologies\n    countMessage.removeAttribute('aria-hidden')\n  }\n\n  // Update styles\n  if (remainingNumber < 0) {\n    countElement.classList.add('govuk-textarea--error')\n    countMessage.classList.remove('govuk-hint')\n    countMessage.classList.add('govuk-error-message')\n  } else {\n    countElement.classList.remove('govuk-textarea--error')\n    countMessage.classList.remove('govuk-error-message')\n    countMessage.classList.add('govuk-hint')\n  }\n\n  // Update message\n  var charVerb = ''\n  var charNoun = 'znak'\n  var displayNumber = remainingNumber\n  if (options.maxwords) {\n    charNoun = 'slov'\n  }\n\n  if ((remainingNumber > 1 && remainingNumber < 5) || (remainingNumber > -5 && remainingNumber < -1)) {\n    charNoun = charNoun + 'y';\n  } else if (remainingNumber == 1 || remainingNumber == -1) { } else {\n    charNoun = charNoun + 'ov';\n  }\n\n  displayNumber = Math.abs(remainingNumber)\n  if (remainingNumber < 0) {\n    displayNumber = '-' + displayNumber;\n    countMessage.innerHTML = 'Prekročili ste maximálny počet znakov';\n  } else {\n    countMessage.innerHTML = 'Zostáva Vám ' + displayNumber + ' ' + charNoun + ' ';\n  }\n}\n\nCharacterCount.prototype.handleFocus = function () {\n  // Check if value changed on focus\n  this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1000)\n}\n\nCharacterCount.prototype.handleBlur = function () {\n  // Cancel value checking on blur\n  clearInterval(this.valueChecker)\n}\n\nexport default CharacterCount\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}