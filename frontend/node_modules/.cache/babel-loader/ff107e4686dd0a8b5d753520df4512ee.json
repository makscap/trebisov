{"ast":null,"code":"import \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport '../../../govuk/vendor/polyfills/Function/prototype/bind';\nimport '../../../govuk/vendor/polyfills/Event'; // addEventListener and event.target normalization\nimport { nodeListForEach, toggleClass } from '../../common';\nfunction TableFilter($module) {\n  this.$module = $module;\n  this.selectedFitlersCount = 0;\n  this.$activeFilters = [];\n\n  // get texts\n  this.removeAllFiltersText = $module.querySelector('.idsk-table-filter__active-filters').dataset.removeAllFilters;\n  this.removeFilterText = $module.querySelector('.idsk-table-filter__active-filters').dataset.removeFilter;\n}\nTableFilter.prototype.init = function () {\n  // Check for module\n  var $module = this.$module;\n  if (!$module) {\n    return;\n  }\n\n  // button to toggle content\n  var $toggleButtons = $module.querySelectorAll('.idsk-filter-menu__toggle');\n\n  // Form with all inputs and selects\n  var $form = $module.querySelector('form');\n\n  // all inputs for count of selected filters\n  var $filterInputs = $module.querySelectorAll('.govuk-input, .govuk-select');\n  nodeListForEach($toggleButtons, function ($button) {\n    $button.addEventListener('click', this.handleClickTogglePanel.bind(this));\n  }.bind(this));\n  if ($form) {\n    $form.addEventListener('submit', function (e) {\n      e.preventDefault();\n      this.handleSubmitFilter(this);\n    }.bind(this));\n  }\n  nodeListForEach($filterInputs, function ($input) {\n    // for selects\n    $input.addEventListener('change', this.handleFilterValueChange.bind(this));\n    // for text inputs\n    $input.addEventListener('keyup', function (e) {\n      // submit if key is enter else change count of used filters\n      if (e.key === 'Enter') {\n        // send event like this, because submitting form will be ignored if fields are empty\n        this.sendSubmitEvent();\n      } else {\n        this.handleFilterValueChange(e);\n      }\n    }.bind(this));\n  }.bind(this));\n\n  // recalculate height of all expanded panels on window resize\n  window.addEventListener('resize', this.handleWindowResize.bind(this));\n};\n/**\n * Forcing submit event for form\n */\nTableFilter.prototype.sendSubmitEvent = function () {\n  this.$module.querySelector('form').dispatchEvent(new Event('submit', {\n    'bubbles': true,\n    'cancelable': true\n  }));\n};\n\n/**\n * An event handler for click event on $togglePanel - collapse or expand table-filter\n * @param {object} e\n */\nTableFilter.prototype.handleClickTogglePanel = function (e) {\n  var $el = e.target || e.srcElement;\n  var $expandablePanel = $el.parentNode;\n  var $content = $el.nextElementSibling;\n\n  // get texts from button dataset\n  var openText = $el.dataset.openText;\n  var closeText = $el.dataset.closeText;\n\n  // if panel is category, change size of whole panel with animation\n  var isCategory = $expandablePanel.classList.contains('idsk-table-filter__category');\n  if (isCategory) {\n    var $categoryParent = $expandablePanel.parentNode;\n\n    // made more fluid animations for changed spacing with transition\n    var marginBottomTitle = isCategory ? 18 : 20;\n    var marginBottomExpandedCategory = 25;\n    var newParentHeight = $content.style.height && $content.style.height !== '0px' ? parseInt($categoryParent.style.height) - $content.scrollHeight - marginBottomTitle + marginBottomExpandedCategory : parseInt($categoryParent.style.height) + $content.scrollHeight + marginBottomTitle - marginBottomExpandedCategory;\n    $categoryParent.style.height = newParentHeight + 'px';\n  }\n\n  // show element after toggle with slide down animation\n  toggleClass($expandablePanel, 'idsk-table-filter--expanded');\n  $content.style.height = ($content.style.height && $content.style.height !== '0px' ? '0' : $content.scrollHeight) + 'px';\n\n  // set text for toggle\n  var hidden = $content.style.height === '0px';\n  var newToggleText = hidden ? openText : closeText;\n  $el.innerHTML = newToggleText;\n  $el.setAttribute('aria-label', newToggleText + ($el.dataset.categoryName ? ' ' + $el.dataset.categoryName : ''));\n\n  // toggle tabbable if content is shown or not\n  var $items = $content.querySelectorAll(':scope > .idsk-table-filter__filter-inputs input, :scope > .idsk-table-filter__filter-inputs select, .idsk-filter-menu__toggle');\n  var tabIndex = hidden ? -1 : 0;\n  nodeListForEach($items, function ($filter) {\n    $filter.tabIndex = tabIndex;\n  });\n};\n\n/**\n * A function to remove filter from active filters\n * @param {object} $filterToRemove\n */\nTableFilter.prototype.removeActiveFilter = function ($filterToRemove) {\n  var $filterToRemoveValue = this.$module.querySelector('.govuk-input[name=\"' + $filterToRemove.name + '\"], .govuk-select[name=\"' + $filterToRemove.name + '\"]');\n  if ($filterToRemoveValue.tagName === 'SELECT') {\n    // if filter is select find option with empty value\n    $filterToRemoveValue.querySelectorAll('option').forEach(function (option, index) {\n      if (option.value === '') {\n        $filterToRemoveValue.selectedIndex = index;\n      }\n    });\n  } else $filterToRemoveValue.value = '';\n\n  // simulate change event of inputs to change count of active filters and call form submit to send information about filter was changed\n  $filterToRemoveValue.dispatchEvent(new Event('change'));\n\n  // send submit event of form to call data changes\n  this.sendSubmitEvent();\n  this.$activeFilters = this.$activeFilters.filter(function ($filter) {\n    return $filter.id !== $filterToRemove.id;\n  });\n  this.renderActiveFilters(this);\n};\n\n/**\n * A function to remove all active filters\n * @param {object} e\n */\nTableFilter.prototype.removeAllActiveFilters = function (e) {\n  this.$activeFilters.forEach(function ($filter) {\n    this.removeActiveFilter($filter);\n  }.bind(this));\n};\n\n/**\n * A function to add elements to DOM object\n * @param {object} e\n */\nTableFilter.prototype.renderActiveFilters = function (e) {\n  // remove all existing filters from array\n  var $activeFiltersPanel = this.$module.querySelector('.idsk-table-filter__active-filters');\n  var $activeFilters = $activeFiltersPanel.querySelector('.idsk-table-filter__active-filters .idsk-table-filter__content');\n  $activeFilters.innerHTML = '';\n\n  // open filter if active filters was hidden before\n  if ($activeFiltersPanel.classList.contains('idsk-table-filter__active-filters__hide')) {\n    $activeFiltersPanel.classList.add('idsk-table-filter--expanded');\n  }\n\n  // render all filters in active filters\n  this.$activeFilters.forEach(function ($filter) {\n    var $activeFilter = document.createElement('div');\n    $activeFilter.classList.add('idsk-table-filter__parameter', 'govuk-body');\n    var $removeFilterBtn = '<button class=\"idsk-table-filter__parameter-remove\" tabindex=\"0\">✕ <span class=\"govuk-visually-hidden\">' + this.removeFilterText + ' ' + $filter.value + '</span></button>';\n    $activeFilter.innerHTML = '<span class=\"idsk-table-filter__parameter-title\">' + $filter.value + '</span>' + $removeFilterBtn;\n    $activeFilter.querySelector('.idsk-table-filter__parameter-remove').addEventListener('click', function () {\n      this.removeActiveFilter($filter);\n    }.bind(this));\n    $activeFilters.appendChild($activeFilter);\n  }.bind(this));\n\n  // add remove everything button if some filter is activated else print none filter is activated\n  if (this.$activeFilters.length > 0) {\n    $activeFiltersPanel.classList.remove('idsk-table-filter__active-filters__hide');\n    var $removeAllFilters = document.createElement('button');\n    $removeAllFilters.classList.add('govuk-body', 'govuk-link');\n    $removeAllFilters.innerHTML = '<span class=\"idsk-table-filter__parameter-title\">' + this.removeAllFiltersText + ' (' + this.$activeFilters.length + ')</span><span class=\"idsk-table-filter__parameter-remove\">✕</span>';\n    $removeAllFilters.addEventListener('click', this.removeAllActiveFilters.bind(this));\n    $activeFilters.appendChild($removeAllFilters);\n  } else {\n    $activeFiltersPanel.classList.add('idsk-table-filter__active-filters__hide');\n  }\n\n  // calc height of 'active filter' panel if panel is expanded\n  var $activeFiltersContainer = this.$module.querySelector('.idsk-table-filter__active-filters.idsk-table-filter--expanded .idsk-table-filter__content');\n  if ($activeFiltersContainer) {\n    $activeFiltersContainer.style.height = 'initial'; // to changing height from initial height\n    $activeFiltersContainer.style.height = $activeFiltersContainer.scrollHeight + 'px';\n  }\n};\n\n/**\n * A function to refresh number of selected filters count\n * @param {object} e\n */\nTableFilter.prototype.renderSelectedFiltersCount = function (e) {\n  var submitButton = this.$module.querySelector('.submit-table-filter');\n  submitButton.disabled = this.selectedFitlersCount === 0;\n  var counter = submitButton.querySelector('.count');\n  counter.innerHTML = this.selectedFitlersCount;\n};\n\n/**\n * A submit filters event on click at $submitButton or pressing enter in inputs\n * @param {object} e\n */\nTableFilter.prototype.handleSubmitFilter = function (e) {\n  // get all inputs and selects\n  var $inputs = this.$module.querySelectorAll('.idsk-table-filter__inputs input');\n  var $selects = this.$module.querySelectorAll('.idsk-table-filter__inputs select');\n\n  // add values of inputs to $activeFilters if it is not empty\n  this.$activeFilters = [];\n  $inputs.forEach(function ($input) {\n    if ($input.value.length > 0) this.$activeFilters.push({\n      id: $input.getAttribute('id'),\n      name: $input.getAttribute('name'),\n      value: $input.value\n    });\n  }.bind(this));\n  $selects.forEach(function ($select) {\n    if ($select.value) this.$activeFilters.push({\n      id: $select.value,\n      name: $select.getAttribute('name'),\n      value: $select.options[$select.selectedIndex].text\n    });\n  }.bind(this));\n\n  // render all filters in active filters\n  this.renderActiveFilters(this);\n};\n\n/**\n * An event handler for on change event for all inputs and selects\n * @param {object} e\n */\nTableFilter.prototype.handleFilterValueChange = function (e) {\n  var $el = e.target || e.srcElement;\n\n  // if filter is in category get count of selected filters only from that category\n  var $category = $el.closest('.idsk-table-filter__category');\n  if ($category) {\n    var $allCategoryFilters = $category.querySelectorAll('.idsk-table-filter__inputs input, .idsk-table-filter__inputs select');\n    var selectedCategoryFiltersCount = 0;\n    $allCategoryFilters.forEach(function ($filter) {\n      if ($filter.value) {\n        selectedCategoryFiltersCount++;\n      }\n    });\n    $category.querySelector('.count').innerHTML = selectedCategoryFiltersCount ? '(' + selectedCategoryFiltersCount + ')' : '';\n  }\n\n  // get count of all selected filters\n  this.selectedFitlersCount = 0;\n  var $allFilters = this.$module.querySelectorAll('.idsk-table-filter__inputs input, .idsk-table-filter__inputs select');\n  $allFilters.forEach(function ($filter) {\n    if ($filter.value) {\n      this.selectedFitlersCount++;\n    }\n  }.bind(this));\n\n  // render count of selected filters\n  this.renderSelectedFiltersCount(this);\n};\n\n/**\n * An event handler for window resize to change elements based on scrollHeight\n * @param {object} e\n */\nTableFilter.prototype.handleWindowResize = function (e) {\n  var $allExpandedPanels = this.$module.querySelectorAll('.idsk-table-filter--expanded');\n  nodeListForEach($allExpandedPanels, function ($panel) {\n    var $content = $panel.querySelector('.idsk-table-filter__content');\n    $content.style.height = 'initial'; // to changing height from initial height\n    $content.style.height = $content.scrollHeight + 'px';\n  });\n};\nexport default TableFilter;","map":{"version":3,"names":["nodeListForEach","toggleClass","TableFilter","$module","selectedFitlersCount","$activeFilters","removeAllFiltersText","querySelector","dataset","removeAllFilters","removeFilterText","removeFilter","prototype","init","$toggleButtons","querySelectorAll","$form","$filterInputs","$button","addEventListener","handleClickTogglePanel","bind","e","preventDefault","handleSubmitFilter","$input","handleFilterValueChange","key","sendSubmitEvent","window","handleWindowResize","dispatchEvent","Event","$el","target","srcElement","$expandablePanel","parentNode","$content","nextElementSibling","openText","closeText","isCategory","classList","contains","$categoryParent","marginBottomTitle","marginBottomExpandedCategory","newParentHeight","style","height","parseInt","scrollHeight","hidden","newToggleText","innerHTML","setAttribute","categoryName","$items","tabIndex","$filter","removeActiveFilter","$filterToRemove","$filterToRemoveValue","name","tagName","forEach","option","index","value","selectedIndex","filter","id","renderActiveFilters","removeAllActiveFilters","$activeFiltersPanel","add","$activeFilter","document","createElement","$removeFilterBtn","appendChild","length","remove","$removeAllFilters","$activeFiltersContainer","renderSelectedFiltersCount","submitButton","disabled","counter","$inputs","$selects","push","getAttribute","$select","options","text","$category","closest","$allCategoryFilters","selectedCategoryFiltersCount","$allFilters","$allExpandedPanels","$panel"],"sources":["/Users/Maksym/Documents/GitHub/trebisov/frontend/node_modules/@id-sk/frontend/idsk/components/table-filter/table-filter.js"],"sourcesContent":["import '../../../govuk/vendor/polyfills/Function/prototype/bind'\nimport '../../../govuk/vendor/polyfills/Event' // addEventListener and event.target normalization\nimport { nodeListForEach, toggleClass } from '../../common'\n\nfunction TableFilter ($module) {\n  this.$module = $module\n  this.selectedFitlersCount = 0\n  this.$activeFilters = []\n\n  // get texts\n  this.removeAllFiltersText = $module.querySelector('.idsk-table-filter__active-filters').dataset.removeAllFilters\n  this.removeFilterText = $module.querySelector('.idsk-table-filter__active-filters').dataset.removeFilter\n}\n\nTableFilter.prototype.init = function () {\n  // Check for module\n  var $module = this.$module\n  if (!$module) {\n    return\n  }\n\n  // button to toggle content\n  var $toggleButtons = $module.querySelectorAll('.idsk-filter-menu__toggle')\n\n  // Form with all inputs and selects\n  var $form = $module.querySelector('form')\n\n  // all inputs for count of selected filters\n  var $filterInputs = $module.querySelectorAll('.govuk-input, .govuk-select')\n\n  nodeListForEach($toggleButtons, function ($button) {\n    $button.addEventListener('click', this.handleClickTogglePanel.bind(this))\n  }.bind(this))\n\n  if ($form) {\n    $form.addEventListener('submit', function (e) {\n      e.preventDefault()\n      this.handleSubmitFilter(this)\n    }.bind(this))\n  }\n\n  nodeListForEach($filterInputs, function ($input) {\n    // for selects\n    $input.addEventListener('change', this.handleFilterValueChange.bind(this))\n    // for text inputs\n    $input.addEventListener('keyup', function (e) {\n      // submit if key is enter else change count of used filters\n      if (e.key === 'Enter') {\n        // send event like this, because submitting form will be ignored if fields are empty\n        this.sendSubmitEvent()\n      } else {\n        this.handleFilterValueChange(e)\n      }\n    }.bind(this))\n  }.bind(this))\n\n  // recalculate height of all expanded panels on window resize\n  window.addEventListener('resize', this.handleWindowResize.bind(this))\n}\n/**\n * Forcing submit event for form\n */\nTableFilter.prototype.sendSubmitEvent = function () {\n  this.$module.querySelector('form').dispatchEvent(new Event('submit', {\n    'bubbles': true,\n    'cancelable': true\n  }))\n}\n\n/**\n * An event handler for click event on $togglePanel - collapse or expand table-filter\n * @param {object} e\n */\nTableFilter.prototype.handleClickTogglePanel = function (e) {\n  var $el = e.target || e.srcElement\n  var $expandablePanel = $el.parentNode\n  var $content = $el.nextElementSibling\n\n  // get texts from button dataset\n  var openText = $el.dataset.openText\n  var closeText = $el.dataset.closeText\n\n  // if panel is category, change size of whole panel with animation\n  var isCategory = $expandablePanel.classList.contains('idsk-table-filter__category')\n  if (isCategory) {\n    var $categoryParent = $expandablePanel.parentNode\n\n    // made more fluid animations for changed spacing with transition\n    var marginBottomTitle = isCategory ? 18 : 20\n    var marginBottomExpandedCategory = 25\n    var newParentHeight = ($content.style.height && $content.style.height !== '0px')\n      ? parseInt($categoryParent.style.height) - $content.scrollHeight - marginBottomTitle + marginBottomExpandedCategory\n      : parseInt($categoryParent.style.height) + $content.scrollHeight + marginBottomTitle - marginBottomExpandedCategory\n\n    $categoryParent.style.height = newParentHeight + 'px'\n  }\n\n  // show element after toggle with slide down animation\n  toggleClass($expandablePanel, 'idsk-table-filter--expanded')\n  $content.style.height = ($content.style.height && $content.style.height !== '0px' ? '0' : $content.scrollHeight) + 'px'\n\n  // set text for toggle\n  var hidden = $content.style.height === '0px'\n  var newToggleText = hidden ? openText : closeText\n  $el.innerHTML = newToggleText\n  $el.setAttribute('aria-label', newToggleText + ($el.dataset.categoryName ? ' ' + $el.dataset.categoryName : ''))\n\n  // toggle tabbable if content is shown or not\n  var $items = $content.querySelectorAll(':scope > .idsk-table-filter__filter-inputs input, :scope > .idsk-table-filter__filter-inputs select, .idsk-filter-menu__toggle')\n  var tabIndex = hidden ? -1 : 0\n  nodeListForEach($items, function ($filter) {\n    $filter.tabIndex = tabIndex\n  })\n}\n\n/**\n * A function to remove filter from active filters\n * @param {object} $filterToRemove\n */\nTableFilter.prototype.removeActiveFilter = function ($filterToRemove) {\n  var $filterToRemoveValue = this.$module.querySelector('.govuk-input[name=\"' + $filterToRemove.name + '\"], .govuk-select[name=\"' + $filterToRemove.name + '\"]')\n  if ($filterToRemoveValue.tagName === 'SELECT') {\n    // if filter is select find option with empty value\n    $filterToRemoveValue.querySelectorAll('option').forEach(function (option, index) {\n      if (option.value === '') {\n        $filterToRemoveValue.selectedIndex = index\n      }\n    })\n  } else $filterToRemoveValue.value = ''\n\n  // simulate change event of inputs to change count of active filters and call form submit to send information about filter was changed\n  $filterToRemoveValue.dispatchEvent(new Event('change'))\n\n  // send submit event of form to call data changes\n  this.sendSubmitEvent()\n\n  this.$activeFilters = this.$activeFilters.filter(function ($filter) {\n    return $filter.id !== $filterToRemove.id\n  })\n\n  this.renderActiveFilters(this)\n}\n\n/**\n * A function to remove all active filters\n * @param {object} e\n */\nTableFilter.prototype.removeAllActiveFilters = function (e) {\n  this.$activeFilters.forEach(function ($filter) {\n    this.removeActiveFilter($filter)\n  }.bind(this))\n}\n\n/**\n * A function to add elements to DOM object\n * @param {object} e\n */\nTableFilter.prototype.renderActiveFilters = function (e) {\n  // remove all existing filters from array\n  var $activeFiltersPanel = this.$module.querySelector('.idsk-table-filter__active-filters')\n  var $activeFilters = $activeFiltersPanel.querySelector('.idsk-table-filter__active-filters .idsk-table-filter__content')\n  $activeFilters.innerHTML = ''\n\n  // open filter if active filters was hidden before\n  if ($activeFiltersPanel.classList.contains('idsk-table-filter__active-filters__hide')) {\n    $activeFiltersPanel.classList.add('idsk-table-filter--expanded')\n  }\n\n  // render all filters in active filters\n  this.$activeFilters.forEach(function ($filter) {\n    var $activeFilter = document.createElement('div')\n    $activeFilter.classList.add('idsk-table-filter__parameter', 'govuk-body')\n    var $removeFilterBtn = '<button class=\"idsk-table-filter__parameter-remove\" tabindex=\"0\">✕ <span class=\"govuk-visually-hidden\">' + this.removeFilterText + ' ' + $filter.value + '</span></button>'\n    $activeFilter.innerHTML = '<span class=\"idsk-table-filter__parameter-title\">' + $filter.value + '</span>' + $removeFilterBtn\n\n    $activeFilter.querySelector('.idsk-table-filter__parameter-remove').addEventListener('click', function () {\n      this.removeActiveFilter($filter)\n    }.bind(this))\n\n    $activeFilters.appendChild($activeFilter)\n  }.bind(this))\n\n  // add remove everything button if some filter is activated else print none filter is activated\n  if (this.$activeFilters.length > 0) {\n    $activeFiltersPanel.classList.remove('idsk-table-filter__active-filters__hide')\n    var $removeAllFilters = document.createElement('button')\n    $removeAllFilters.classList.add('govuk-body', 'govuk-link')\n    $removeAllFilters.innerHTML = '<span class=\"idsk-table-filter__parameter-title\">' + this.removeAllFiltersText + ' (' + this.$activeFilters.length + ')</span><span class=\"idsk-table-filter__parameter-remove\">✕</span>'\n    $removeAllFilters.addEventListener('click', this.removeAllActiveFilters.bind(this))\n    $activeFilters.appendChild($removeAllFilters)\n  } else {\n    $activeFiltersPanel.classList.add('idsk-table-filter__active-filters__hide')\n  }\n\n  // calc height of 'active filter' panel if panel is expanded\n  var $activeFiltersContainer = this.$module.querySelector('.idsk-table-filter__active-filters.idsk-table-filter--expanded .idsk-table-filter__content')\n  if ($activeFiltersContainer) {\n    $activeFiltersContainer.style.height = 'initial' // to changing height from initial height\n    $activeFiltersContainer.style.height = $activeFiltersContainer.scrollHeight + 'px'\n  }\n}\n\n/**\n * A function to refresh number of selected filters count\n * @param {object} e\n */\nTableFilter.prototype.renderSelectedFiltersCount = function (e) {\n  var submitButton = this.$module.querySelector('.submit-table-filter')\n  submitButton.disabled = this.selectedFitlersCount === 0\n\n  var counter = submitButton.querySelector('.count')\n  counter.innerHTML = this.selectedFitlersCount\n}\n\n/**\n * A submit filters event on click at $submitButton or pressing enter in inputs\n * @param {object} e\n */\nTableFilter.prototype.handleSubmitFilter = function (e) {\n  // get all inputs and selects\n  var $inputs = this.$module.querySelectorAll('.idsk-table-filter__inputs input')\n  var $selects = this.$module.querySelectorAll('.idsk-table-filter__inputs select')\n\n  // add values of inputs to $activeFilters if it is not empty\n  this.$activeFilters = []\n  $inputs.forEach(function ($input) {\n    if ($input.value.length > 0)\n      this.$activeFilters.push({\n        id: $input.getAttribute('id'),\n        name: $input.getAttribute('name'),\n        value: $input.value\n      })\n  }.bind(this))\n\n  $selects.forEach(function ($select) {\n    if ($select.value)\n      this.$activeFilters.push({\n        id: $select.value,\n        name: $select.getAttribute('name'),\n        value: $select.options[$select.selectedIndex].text\n      })\n  }.bind(this))\n\n  // render all filters in active filters\n  this.renderActiveFilters(this)\n}\n\n/**\n * An event handler for on change event for all inputs and selects\n * @param {object} e\n */\nTableFilter.prototype.handleFilterValueChange = function (e) {\n  var $el = e.target || e.srcElement\n\n  // if filter is in category get count of selected filters only from that category\n  var $category = $el.closest('.idsk-table-filter__category')\n  if ($category) {\n    var $allCategoryFilters = $category.querySelectorAll('.idsk-table-filter__inputs input, .idsk-table-filter__inputs select')\n    var selectedCategoryFiltersCount = 0\n    $allCategoryFilters.forEach(function ($filter) {\n      if ($filter.value) {\n        selectedCategoryFiltersCount++\n      }\n    })\n    $category.querySelector('.count').innerHTML = selectedCategoryFiltersCount ? '(' + selectedCategoryFiltersCount + ')' : ''\n  }\n\n  // get count of all selected filters\n  this.selectedFitlersCount = 0\n  var $allFilters = this.$module.querySelectorAll('.idsk-table-filter__inputs input, .idsk-table-filter__inputs select')\n  $allFilters.forEach(function ($filter) {\n    if ($filter.value) {\n      this.selectedFitlersCount++\n    }\n  }.bind(this))\n\n  // render count of selected filters\n  this.renderSelectedFiltersCount(this)\n}\n\n/**\n * An event handler for window resize to change elements based on scrollHeight\n * @param {object} e\n */\nTableFilter.prototype.handleWindowResize = function (e) {\n  var $allExpandedPanels = this.$module.querySelectorAll('.idsk-table-filter--expanded')\n  nodeListForEach($allExpandedPanels, function ($panel) {\n    var $content = $panel.querySelector('.idsk-table-filter__content')\n    $content.style.height = 'initial' // to changing height from initial height\n    $content.style.height = $content.scrollHeight + 'px'\n  })\n}\n\nexport default TableFilter\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}